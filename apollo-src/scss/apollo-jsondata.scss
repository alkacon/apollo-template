// This program is part of the OpenCms Apollo Template.
//
// Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

/**********
 * Source file: apollo-jsondata.scss
 *
 * Data about the CSS encoded in JSON so that it can be easily consumned by JavaScript.
 */


/* Page info element */
#apollo-info {
    visibility: hidden;

    // passing variables from SCSS to JavaScript
    // see https://css-tricks.com/making-sass-talk-to-javascript-with-json/
    &:before {
        display: none;
        content: '{#{$themeJSON}}';
    }
}

.apollo-grid-info {
    &:before {
        content: 'xs';
    }
    @media (min-width: $screen-sm-min) {
        &:before {
            content: 'sm';
        }
    }
    @media (min-width: $screen-md-min) {
        &:before {
            content: 'md';
        }
    }
    @media (min-width: $screen-lg-min) {
        &:before {
            content: 'lg';
        }
    }
}

#apollo-grid-info:before {
    display: none;
}

/* Page info elements providing JavaScript access to selected styles */
.apollo-info {

    &.many-colors {

        $JSON: get-json($many-colors);
        &:before {
            display: none;
            content: '[#{$JSON}]';
        }
    }

    &.text-colors {

        $JSON: get-json($text-colors);
        &:before {
            display: none;
            content: '[#{$JSON}]';
        }
    }

    &.link-colors {

        $JSON: get-json($link-colors);
        &:before {
            display: none;
            content: '[#{$JSON}]';
        }
    }

    &.reduced-colors {

        $JSON: get-json($reduced-colors);
        &:before {
            display: none;
            content: '[#{$JSON}]';
        }
    }
}