/*
 * This program is part of the OpenCms Apollo Template.
 *
 * Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**********
 *
 * apollo-animation.scss
 *
 */

/**
 * Variables for more variation in animation curves.
 * Values taken from: http://http://easings.net/
 **/

$easeInQuad: cubic-bezier(0.55, 0.085, 0.68, 0.53);
$easeOutQuad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
$easeInCubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);
$easeOutCubic: cubic-bezier(0.215, 0.61, 0.355, 1);

// Mixin for the shadow boxes
@mixin animated-box-reset {

    box-shadow: none;
    -webkit-transition: all 0.4s $easeOutQuad;
     transition: all 0.4s $easeOutQuad;
     z-index: 5;
}

/**
 * Shadow animation effect.
 * HTML structure:
 * 
 * <div class="ap-shadow-animation">      <-- Effect trigger box
 *     <div classs="animated-box">        <-- Animated box
 *         ...
 *     </div>
 *     Other content
 * </div>
 * 
 * This effect does two animations at once.
 * The effect trigger box gets the shadow, and the animated box is shrunk.
 **/
.ap-shadow-animation {

    // Apply shadow effect to the surrounding box on hover
    &:hover {
        box-shadow: 0 0 10px 1px $dropshadow;
    }

    // Reverse the shadow effect on the surrounding box if no hover
    -webkit-transition: box-shadow 0.35s $easeInQuad;
    transition: box-shadow 0.35s $easeInQuad;

    // Shrink the inner box on hover 
    &:hover.animated-box .text-box,
    &:hover .animated-box .text-box {
        -webkit-transform: scale(0.925);
        transform: scale(0.925);
    }

    // Reverse the effect to the animated box if no hover
    &.animated-box .text-box,
    .animated-box .text-box {
        @include animated-box-reset;
    }
}


/**
 * Shadow inset animation effect ('sunken shadow').
 * HTML structure:
 * 
 * <div class="ap-inset-animation">      <-- Effect trigger box
 *     <div classs="animated-box">       <-- Animated box
 *         ...
 *     </div>
 *     Other content
 * </div>
 * 
 * This effect does two animations at once.
 * The effect trigger box gets the inset shadow, and the animated box is shrunk.
 **/
.ap-inset-animation {

    // Apply inset shadow effect to the surrounding box on hover
    &:hover {
        box-shadow: 0 0 10px 1px $dropshadow inset; 
    }

    // Reverse the shadow effect on the surrounding box if no hover
    -webkit-transition: box-shadow 0.35s $easeInQuad;
    transition: box-shadow 0.35s $easeInQuad;

    // Shrink the inner box on hover 
    &:hover .animated-box {
        -webkit-transform: scale(0.925);
        transform: scale(0.925);
    }

    // Reverse the effect to the animated box if no hover
    .animated-box {
        @include animated-box-reset;
    }
}


/**
 * Raise box effect.
 * HTML structure:
 * 
 * <div class="ap-raise-animation">      <-- Effect trigger box
 *     <div classs="animated-box">       <-- Animated box
 *         ...
 *     </div>
 *     Other content
 * </div>
 **/
.ap-raise-animation {

    // Apply the raise effect to the animated box on hover 
    &:hover.animated-box,
    &:hover .animated-box {
        -webkit-transform: scale(1.075);
        transform: scale(1.075);
        box-shadow: 0 0 10px 1px $dropshadow;
    }

    // Animated text gets a slight border
    &:hover .text-box {
        -webkit-transform: scale(0.93);
        transform: scale(0.93);
    }

    // Reverse effect for animated text
    .text-box {
        border: 0 solid $white;
        -webkit-transition: all 0.4s $easeOutQuad;
        transition: all 0.4s $easeOutQuad;
    }

    // Reverse the effect to the animated box if no hover
    &.animated-box,
    .animated-box {
        @include animated-box-reset;
    }
}


/**
 * Button animation effect.
 * HTML structure:
 * 
 * <div class="ap-button-animation">      <-- Effect trigger box
 *     <div classs="button-box">          <-- Place marker box
 *         <a href="..."></a>             <-- Animated link button
 *     </div>
 *     Other content
 * </div>
 **/
.ap-button-animation {

   // Apply button effect on hover over the trigger box
    &:hover .button-box a {
        right: 10px;
    }

    // The button is placed in relation to the place-box
    .button-box a {
        bottom: 15px;
        position: absolute;
        display: inline-block; 

        right: -10px;
        -webkit-transition: right 0.4s $easeOutQuad;
        transition: right 0.4s $easeOutQuad;
    }

    // Marks the position for absolute button placement
    .button-box {
        position: relative;
    }
}


/**
 * Ken Burns animation effect.
 * HTML structure:
 * 
 * <div class="ap-kenburns-animation">    <-- Effect trigger box
 *     <div classs="image-outer-box">     <-- Efect limitation box
 *         <div class="image-inner-box">  <-- Animated box, should be directly in limitation box
 *             ...
 *         </div>
 *     </div>
 *     Other content
 * </div>
 **/
.ap-kenburns-animation {

    // Apply the Ken Burn effect to the animated box on hover 
    &:hover .image-inner-box {
       -webkit-transform: scale(1.25) rotate(2deg);
       transform: scale(1.25) rotate(2deg);
    }

    // Reverse all effects to the animated box if no hover
    .image-inner-box {
        -webkit-transition: -webkit-transform 1.0s $easeOutQuad;
        transition: transform 1.0s $easeOutQuad;
    }

    // Limits the effect to the borders of this box
    &.image-outer-box,
    .image-outer-box {
        overflow: hidden;
    }
}


/**
 * Spinner animation.
 * Displays a "currently loading" type spinner symbol.
 * Used e.g. by the list and the image gallery.
 */
@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.spinner{
    width: 30px;
    height: auto;
    font-size: 30px;
    position: absolute;
    transform: translateY(-50%);
    z-index: 1000;
    &, a &  {
        color: $white;
    }

    left: 50%;
    i {
        animation: spinner 700ms infinite;
        animation-timing-function: steps(4, end);
    }
}

.spinnerInnerBox {
    position: relative;
    left: -150%;
    background-color: black;
    width: 300%;
    padding: 100%;
    border-radius: 12px;
    line-height: 0;
    opacity: 0.65;
}

.spinnerBottom {
    bottom: 80px;
}


/**
 * Image gallery image enter animation. 
 */
.comein {
    transform: translateY(120px);
    animation: come-in 0.8s ease forwards;
    &:nth-child(even) {
        transform: translateY(150px);
        animation-duration: 1.0s; // This makes the images look staggered when entering
    }
}


@keyframes come-in {
    to { transform: translateY(0); }
}


/**
 * Zoom overlay effect used by image gallery. 
 */
$zoom-bg:  rgba($black, 0.5) !default;
$zoom-fg:  $text-light !default;


.zoom:hover .zoom-overlay .zoom-icon {
    opacity: 1;
    transform: scale(1);
}

.zoom-overlay {
    cursor: pointer;
    position: relative;
    display: block;
    height: 100%;
    width: 100%;
    transition: all 0.1s ease-in-out 0s;
}

.zoom-overlay .zoom-icon {
    position: absolute;
    top: 0;
    height: 100%;
    width: 100%;
    opacity: 0;
    transform: scale(0);
    transition: all 0.4s ease-in-out 0s;
    z-index: 100;
    background-color: $zoom-bg;
    &:before {
        background: transparent;
    }
    &:after {
        background: transparent;
    }
}

.zoom-overlay .zoom-icon i {  
    // trick to position the element in the center of the surrounding div
    // see http://stackoverflow.com/questions/5703552/css-center-text-horizontal-and-vertical-inside-a-div-block
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%); 
    font-size: 30px;
    color: $zoom-fg;
}


/**
 * Parallax Background effect. 
 */
.parallax-background {

    background-image: none; 
    background-position: 50% 0px;
    background-size: cover;
    background-clip: border-box;
    background-origin: border-box;
    background-repeat: no-repeat;

    @media (min-width: $screen-md-min) {
        background-attachment: fixed;
    }

    @media (max-width: $screen-sm-max) {
        background-attachment: scroll;
    }
}