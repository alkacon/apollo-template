// This program is part of the OpenCms Apollo Template.
//
// Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
// 
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

/**********
 * Source file: apollo-generics.scss
 *
 * Generic CSS selectors that can apply to most block elements.
 * These usually are to be used as "CSS Wrapper" in the Apollo element settings.
 */

$bg-colors:              $many-colors !default;
$font-colors:            $many-colors !default;

$margins-paddings:       $spacers !default;
$font-sizes:             (6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 24, 26, 28, 30, 36, 48, 72) !default;
$line-heights:           (5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) !default;

$border-default-color:   $main-theme !default;
$border-sizes:           (1, 2) !default;
$border-radiuses:        ((0, 0px), (2, 2px),  (4, 4px), (5, 5px), (10, 10px), (15, 15px), (20, 20px), (30, 30px), (25p, 25%), (50p, 50%)) !default;
$border-positions:       (bottom, top, left, right) !default;
$border-styles:          (none, solid, dotted, dashed, hidden) !default;

$text-colors:            ((light, $text-light), (dark, $text-dark)) !default;
$link-colors:            ((default, $main-theme, $main-theme-hover),
                          (dark, $text-dark, $grey),
                          (light, $text-light, $grey-lighter),
                          (white, $white, $grey-lighter),
                          (grey, $grey, $grey-light),
                          (black,  $black, $grey-darker)) !default;


@mixin set-text-color($text-color) {

    color: $text-color;

    *:not(a):not(span) {
        color: $text-color;
    }
}

/* Link text colors */

@each $color-name, $text-color, $highlight-color in $link-colors {

    .links-#{""+$color-name} {
        a:not(.btn) {
            color: $text-color;

            &:hover {
                color: $highlight-color;
            }
        }
    }
}


/* Colored backgrounds */

@each $color-name, $bg-color, $highlight-color in $bg-colors {

    .bc-#{""+$color-name} {
        background-color: $bg-color;
    }

    .transparent-bc-#{""+$color-name} {
        background-color: rgba($bg-color, 0.7);
    }

    .bg-#{""+$color-name} {
        background-color: $bg-color;
        overflow: hidden;
        padding: 20px;
        color: get-text-color($bg-color);

        *:not(a):not(span) {
            color: get-text-color($bg-color);
        }
    }

    .transparent-bg-#{""+$color-name} {
        @extend .bg-#{""+$color-name};

        background-color: rgba($bg-color, 0.7);
    }
}


/* Colored text */

@each $color-name, $text-color in $text-colors {

    .text-#{""+$color-name} {

        @include set-text-color($text-color);
    }
}

@each $color-name, $text-color, $highlight-color in $font-colors {

    .text-#{""+$color-name} {

        @include set-text-color($text-color);
    }
}


/* Font sizes */

@each $fontsize in $font-sizes {

    .fs-#{$fontsize} {
        font-size: #{$fontsize}px;
    } 
}


/* Line heights */

@each $lineheight in $line-heights {

    .lh-#{$lineheight} {
        line-height: #{$lineheight / 10};
    } 
}


/* Text alignment */

@each $align in (left, center, right) {

    .fa-#{$align} {
        text-align: $align;
    }
}

// Vertical text align settings

.va-middle {
    vertical-align: middle;
}

/* Border base */

@each $radius-name, $radius in $border-radiuses {     

    .bo-radius-#{""+$radius-name} {
        border: 0 solid;
        border-radius: $radius;
    }
}

/* Borders with round corners */

@each $line-size in $border-sizes {    

    .bo-#{""+$line-size}  {
        border: #{$line-size}px solid $border-default-color;
        padding: 20px;
    }
}


/* Colored borders */

@each $color-name, $bg-color, $highlight-color in $reduced-colors {

    .bo-#{""+$color-name}  {
        border-color: $bg-color;
    }
}

/* Borders styles */

@each $border-style in $border-styles {

    .bo-#{""+$border-style}  {
        border-style: $border-style;    
    }
}


/* Borders positions */

@each $position in $border-positions {

    @each $line-size in $border-sizes {    

        .bo-#{""+$position}-#{""+$line-size}  {
            border-#{$position}: #{$line-size}px solid $border-default-color;
            padding: 20px;
        }
    }

    @each $color-name, $bg-color, $highlight-color in $reduced-colors {

        .bo-#{""+$position}-#{""+$color-name}  {
            border-#{$position}-color: $bg-color;
        }
    }

    @each $border-style in $border-styles {

        .bo-#{""+$position}-#{""+$border-style}  {
            border-#{$position}-style: $border-style;
        }
    }
}


/* Block display settings */

.disp-i {
    display: inline;
}

.disp-ib {
    display: inline-block;
}

.disp-b {
    display: block;
}


/* Block position settings */

.pos-abs {
    position: absolute;
}

.pos-rel {
    position: relative;
}

.pos-stat {
    position: static;
}


/* Hide overflow */

.overflow-hidden {
    overflow: hidden;
}


/* Drop shadow effect */

.ap-shadow {
    box-shadow: 0 10px 6px -6px $dropshadow;
}


/* Margins and paddings */

@each $space in $margins-paddings {

    .p-#{$space} {
        padding: #{$space}px;
    }
    .pv-#{$space} {
        padding-top: #{$space}px;
        padding-bottom: #{$space}px;
    }   
    .ph-#{$space} {
        padding-left: #{$space}px;
        padding-right: #{$space}px;
    }
    .pl-#{$space} {
        padding-left: #{$space}px;
    }
    .pr-#{$space} {
        padding-right: #{$space}px;
    }
    .pt-#{$space} {
        padding-top: #{$space}px;
    }       
    .pb-#{$space} {
        padding-bottom: #{$space}px;
    }    
    .m-#{$space} {
        margin: #{$space}px;
    }  
    .mv-#{$space} {
        margin-top: #{$space}px;
        margin-bottom: #{$space}px;
    }    
    .mh-#{$space} {
        margin-left: #{$space}px;
        margin-right: #{$space}px;
    }   
    .ml-#{$space} {
        margin-left: #{$space}px;
    }
    .mr-#{$space} {
        margin-right: #{$space}px;
    }       
        .mt-#{$space} {
            margin-top: #{$space}px;
        }        
    .mb-#{$space} {
        margin-bottom: #{$space}px;
    }
}


/* Page info element */
#apollo-info {
    visibility: hidden;

    // passing varaibales from SCSS to JavaScript
    // see https://css-tricks.com/making-sass-talk-to-javascript-with-json/ 
    &:before {
        content: '{#{$themeJSON}}'
    }
}